{"name":"IBM Cloud Kubernetes Service","oneline":"IBM Cloud Kubernetes Service is being used by a department.  We run different backend microservices in it to serve our consumers.  It is adopted to ease the management of containers in the cloud.  Since it's a managed service, we don't need to spend much effort from an operation perspective. I am currently using it for a project.  It is meant to address the ease of orchestrating the deployment of containers. IBM Cloud Kubernetes Service removed the requirement to make application-specific configurations for each server and enabled engineers to iterate faster, knowing that what is shipped and runs in production is exactly what they built and tested.  No more going through many steps of cloning multiple repos, pulling configurations, and installing lots of components locally.  It greatly increased the infrastructure and the speed to launch new products and features into the marketplace. We adopted IBM Cloud Kubernetes Service for container orchestration and we migrated our entire infrastructure to Kubernetes, starting with our website applications and concluding with the backend of the operations.  IBM Cloud Kubernetes Service unlocked our confidence in being able to deploy quickly, learn, and even at times when we make a mistake, we can roll it back without any issue.  After implementing this system we quickly started to realize the benefit of having seamless upgrades and easy rollbacks without any issue and now we can experiment with existing applications and create new services blazingly fast. We mostly use [it] for our applications and it seamlessly performs well and executes the tasks for scaling with [fewer] efforts. IBM CloudKubernetesService gives us a uniform API across heterogeneous resources to define our workloads and expand resources outside our infrastructure.  It comes with built-in monitoring and logging for all the applications and the workloads that deploy inKubernetes.  Once we began migrating applications toKubernetes, the result [was] immediate and we are able to ship ideas to production using a single consistent and declarative API. IBM Cloud Kubernetes Service is being used by our IT department.  We have a business application and IBM Cloud Kubernetes Service was very helpful when we were migrating the app from being in-house to the cloud.  The platform is also very helpful when it comes to scaling the application.  Scaling is not only easy but also affordable. We had been using IBM Cloud Virtual Servers for a long time for all of our compute workloads.  When we moved to containerized deployments at scale, we looked for an orchestration system that we could use as well. Kubernetesis the gold standard for container orchestration software and we decided to go with IBM CloudKubernetesService since we use other IBM Cloud products. A small portion of businesses uses K8s but only for microservices. Migrating legacy apps to the native cloud.  It provides a simple way to progressively remove code from monolithic ones while providing all cloud benefits like autoscaling or data integrity.  IBM Cloud [Kubernetes Service] makes it very easy with great documentation and support. IBM Cloud Kubernetes Service is being used by our IT department.  We have a business applications and IBM Cloud Kubernetes Service was very helpful when we were migrating the app from being in-house to the cloud.  The platform is also very helpful when it comes to scaling the application.  Scaling is not only easy but also affordable. IBM Cloud Kubernetes Service is utilized by our startup to host our application.  It allows us to scale up easily our applications and is cost-effective. It is been used for a client to build web apps and business applications and also to have resilience, fault tolerance, and auto-scaling services.  It is also used for matrices to view logs and monitor service health checks, security, and the consistency of applications.  Providing the consultancy to different financial clients who are outsourcing the services and designing the workloads for their applications and operational task. IBM Kubernetes services are very good in terms of reliability and consistent operation with reducing management.  It is easy to distribute the clusters and manage the services easily.  IBM services make the task quite easy to do it all in one place. We give various blockchain programming interface administration answers for our customer for an intermediary casting a ballot application utilized by significant stock exchange organizations in UK and USA.  Our blockchain programming interface was facilitated and oversees inside the IBM [Cloud Kubernetes Service].  The [IBM Cloud Kubernetes Service] has been utilized all over the office among the organization. We host our application running on a CentOS container on IBM Cloud Kubernetes Service.  We have been using the service since IBM Cloud originally launched.  We appreciated the flexibility and scalability that IBM Cloud Kubernetes Service provide us.  Since we are quite small, the Kubernetes service is only used currently within my project group. We provide multiple blockchain api service solution to our client for a proxy voting application used by major stock transfer company in usa.  Our blockchain api were hosted and manages inside the IBM [Cloud Kubernetes Service].  The [IBM Cloud Kubernetes Service] has been used by all across the department among the company. We elected to use IBM Cloud Kubernetes Service because of the excellent support for blockchain (hyperledger).  The fact that we could containerized master nodes and move the chain outside of IBM cloud services when that time arrived.  As well, the presence and availability of IBM consulting services enabled us to feel confident that we would never the stuck at sea. We use IBM CloudKubernetesService for research purposes.  It is used by the whole Cloud services research team.  It allows us to scale up easily our applications and to set up autoscale mechanisms when a condition is verified.  We use IBM CloudKubernetesService because it is really cost-effective and permits a precise billing based on the used resources. We are using it for proof of concept for microservices usingKubernetesand Docker engine. Our entire department is using it to create high-availability clusters, making mobile scalability truly user-friendly and easy to develop multilingual applications. Before, we hosted our entire cluster in GKE (Google Cloud).  This was not user-friendly at all and after another random increase in the price (for us almost 70 euro per month), we wanted to switch to another cloud provider.  We're in the middle of migrating our entire cluster to IBM Cloud and so far we're really happy with it!. It is being used by the whole company.  We use IBM Cloud Kubernetes for our VPN server.  IBM has a lot of data centers around the globe thus it's really effective in connecting employees at different locations in Europe and USA to the company servers.  As much as I know, our mail server is also located on IBM Cloud Kubernetes. Yes.  We're trying to deploy cloud services on IBM Cloud Kubernetes.  It's intended to improve productivity of my staff.  However, according to my employees, the descriptions are rather difficult to understand.  Sometimes they get confused about specific functions.  They know how to run it, if they can find how to initialize the configurations. IBM CloudKubernetesService is part of our testing environment for multi-cloud projects.  By using ISTIO mesh to span to multipleKubernetesclusters across multiple cloud providers, we can test the HA capabilities of the deployments and offer high HA solutions to our customers. Also, by integrating IBM CKS to Google Cloud using Google Anthos GKE Connect, we can manage all our deployments in one place.  IBM CKS offers one of the most powerfulKubernetesservices: stable, powerful, easy to use and HIGH availability. IBM Cloud Kubernetes Service is being used mainly for educational purposes.  We use it to show the students some use cases regarding things such as a VPN server using squid, or an HTTP server using Nginx. I'm using IBM Cloud Kubernetes Service to implement a solution with theIBM Blockchain Platform.  Our product is around Blockchain, but nobody can use the Kubernetes Service.  I'm the only one who can manage it.  The only problem I have is its capacity.  Now, I'm checking out how to upgrade each machine instead of adding more. We've been using RedHatOpenShiftfor a while and are currently evaluating IBM Kubernetes directly for our clusters. It is used for orchestration of business services.  It is used by a department.  It addresses automation of business processes. We had used Kubernetes service for building hyper ledger fabric applications.  Kubernetes comes in handy in integration with hyper ledger for building various blockchain use cases.  We use Kubernetes within our blockchain team for building products for our clients. We are developing a blockchain application for a healthcare-related product.  We are using the IBM blockchain platform with the Kubernetes cluster to deploy our network as well as to expose our node application. As a systems integrator, we use IBM Cloud Kubernetes for our customers for deploying micro-services in Kubernetes as a backend for several apps.  Kubernetes is easily configurable, deployable and scaleable.  We can innovate and deploy new functionality in days combined with an Agile way of working.  So IBM Cloud Kubernetes gives us the certainty of a managed container service and we can fully concentrate on the micro-services and the data. I'm currently trialing out IBM CloudKubernetesService as part of my independent testing since our platform usesKubernetesas our primary deployment method for our PaaS. I attended a workshop on Kubernetes, specifically focusing on Istio.  The service seems quite solid.  IBM's special add-ons to Kubernetes, especially Watson, are what sets it apart from Amazon Webservices (AWS) orGoogle Compute Engine(GCE).  While my experience is quite limited, the workshop showed me that it's a solid product, worth considering when choosing where to run Kubernetes. Used by my DevOps department addressing our transition towards a CI/CD paradigm for our enterprise applications. Yes, IBM is a cloud partner of AA and we are using IBM Kubernetes.  The master node and worker node are in with B2B cloud VPN and they are secure.  API gateway is good. It used by my application team.  We use it to move current applications from on-premise to cloud. We are an IT consulting company specializing in cloud architecture, security, hybrid and multi-cloud deployments.  We recently starting working with IBM Cloud.  We used IBM CloudKubernetesto train ourselves in preparation to advise our customers. We deployed several test environments from our Google CloudKubernetessystem to IBM CloudKubernetesfor practice.  This proceeded without incident or technical problems.  I wrote an article on my personal website that detailed my experiences with IBM Cloud and IBM CloudKubernetes. We are from pre-sales team, we'll make POC on that, and we will expose it to the world.  Here I attended one internal IBM training in our organization.  I found that IBM Cloud on DevOps only works on NodeJs support.  We are looking on Java Simple Hello World app. We useKubernetesin a production environment to stream millions of events per second with real-time data ingestion apps. Kuberneteshas an acceptable learning curve and allows us to manage all our microservice containers. We use IBM CloudKubernetesService in order to get high availability in some simple web applications that are relevant to our daily work.  This is a challenge to my organization because we don't have enough human and computational resources to spend in order to create and support a more advanced set up with those services. We use it to run CPU intensive workloads and UI websites. We are using IBM Cloud Kubernetes Service in our DevOps department.  It automates our whole process of software development.  We also take advantage of the canary versions of our web applications. We are using the IBM K8s Service to handle user-submitted private data.  K8s can be used to better distribute workloads.  IBM Kubernetes Service has been chosen for processing speed and for a faster network.  Deploying is more convenient than with a VM, but it does not have the stability of a traditional VM. We are migrating our current application fromIBM Cloud FoundrytoKubernetes.  We grew out of CF and needed more compute power, therefore we turned toKubernetes.  Currently, we are using it as the primary architecture for our UI and a few of our complex processing processes (pseudo batch processing).  We are implementing it for this one client, but we have other clients onKuberneteson other cloud platforms.  The application that it is running supports 300 million dollars in business for this company.  The solution is only for a single subset of a larger department.  Many pieces of the application are still in Cloud Foundry; we are still in the process of migrating. We used this cloud provider in order to learn how to correctly use containers and to deploy some simple apps.  Even though the complexity of the applications was low, we wanted to have high availability at a low cost and low technical difficulty. IBM Cloud Kubernetes Service helps us to create pods without managing the actual installation ofKubernetes.  We can also have a secure environment in which we can implement a CI CD workflow for the Docker containers. Mainly we are using IBM Cloud Foundry as a service platform but some readily available installations (for example Artifactory) are installed on Kubernetes service. We use the IBM Cloud Kubernetes Service for the deployment of the blockchain application.  We are doing research on how blockchain can be employed in real-world applications.  We thought that cloud containers would be better for deploying blockchains and working on them.  IBM's Kubernetes Service is pretty good but sometimes it suddenly sends an email saying that there was an unexpected issue and it'll be closed for some time. IBM Cloud Kubernetes Service supports the core of our organization.  It has solved the problem of being cloud agnostic for most of what we use Kubernetes Services for. It resolved all the Cloud Foundry issues while deploying the unwired UI when updated to Meteor 1. 8. We are working with IBM to list our product in the IBM Marketplace, so we are using IBM Kubernetes Service to deploy OpenServiceBroker and host it there so that we can integrate with the IBM catalog and Billing services. UsingKubernetesin our company allows us to manage multiple environments easily.  In our company, we have two major products with three environments (dev, staging, and production). Kubernetesprovides a concept of namespaces that allows us to isolates resources by environments.  The best aspect withKubernetesis the ability to use Docker in a secure and reliable way. IBM Kubernetes Service is our one-stop for running all our Java services and NodeJs services.  Currently, we are running 16 services inside our Kube cluster.  It hosts and runs the application that collects the IOT information from our bots and stores it inIBM Cloudant. We are using it for migrating work loads into the Cloud. We use IBM Cloud Kubernetes Service in our IoT Platform.  Currently it isn't being used across different parts of the organization.  In our IoT platform, we use IBM Cloud Kubernetes Service to orchestrate about 200 micro services that are deployed on IBM Containers.  Because of Kubernetes we no longer need to manage scaling and it's super easy to deploy the application. We are using Kubernetes to manage our entire IoT backend services, globally.  It’s a fairly complex implementation with performance and security requirements which IBM is fully delivering. We used it for a POC of a mobile app back-end service during container technology evaluation. We are an IBM Bluemix implementation partner.  We use our platform for proofs of concept, demos, and training, etc.  So we are in the business for providing Bluemix solutioins for others, there are no business problems which Bluemix addressess internally at the moment or in the future, if you are not counting the license sales. Bluemix is being used to create a platform for the delivery of electronic scheduling services. \nBluemix gave us the ability to iterate on multiple initiatives and micro-services with limited resources. All the micro-services that are running to keep our VoIP platform alive are deployed over Bluemix.  It provides seamless integration with our deployment model and reduces much of the hassle involved in the deployment process.  Compared to a privately hosted infrastructure, a cloud solution the likes of Bluemix provides more flexibility while reducing cash burn. We use Bluemix primarily as a way to access IBM Watson's suite of AI APIs, for our own use as well as proposing as a solution for other companies.  Watson is one of several AI options we can support with our chatbot AIs, and is especially suitable for issues where security is important and a local install may be required. Our product development team uses Watson APIs through Bluemix.  We build cognitive applications in a B2C market for identity protection services.  IGWW integrates Watson APIs as components of a daily “threat” monitoring service for consumers.  Our cognitive application is developed to monitor news events related to software vulnerabilities, data breaches, online scams, and malware campaigns that are directly relevant to the consumer.  The data are then extracted from the web, filtered, processed, scored, and presented to the consumer as a “threat alert” related to some aspect of their personal information security.  The alert is presented with advice for mitigating the threat in the form of an “action”.  Upon completion of an action, the user will see this reflected in their individual risk management plan. Additionally, as threat alerts are generated, they are personalized and targeted to specific consumers using information contained in their personal profile.  Some of the data points in a profile are automatically captured using social media data and Natural Language Classifiers to select attributes. We use Bluemix internally and for our clients across entire organizations.  Bluemix enhances the connectivity between different cloud services, so that data and code can be aggregated in one central place: The Bluemix Dashboard.  While similar services exist in AWS and Azure, Bluemix makes the integration highly automated and reliable.  Coders can self service their section of the Bluemix infrastructure without relying on cloud networking experts to do so.  Database administrators can easily share and control access to data through IBM Data Connect across more than 20 industry standard databases, and though multi-cloud vendors. "}